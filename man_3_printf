.\" Manpage for printf.
.\" Contact 1175@holbertonschool.com and 1178@holbertonschool.com to correct errors.
.TH _printf 3 "29 October 2019" "1.0" "printf man page"
.SH NAME
printf \- (print formatted) formatted output conversion.
.SH SYNOPSIS
#include <stdio.h>
.PP
int printf(const char *format, ...);
.SH DESCRIPTION
The printf function prints a message on the screen using a formatted string that. It includes the instructions to mix multiple chains in the final chain to be displayed on the screen. It is a special function because it receives a variable number of parameters, the first parameter is fixed and is the format string. Through this function we can write data to the standard output device, being any combination of numerical values, single characters and character strings.
.PP
The printf function transports data from memory to the screen.
The constant format string provides a description of the output, with placeholders marked by escape characters "%", to specify the relative location and type of output that the function must produce. The printf function returns the number of characters printed, or a negative value if an error occurs.
.PP
\fBReturn value\fp
.PP
After a successful return, these functions return the number of characters printed (excluding the null byte used to finalize the output to the strings).
.PP
\fBThe characters of the flag\fp
.PP
The% character is followed by zero or more of the following flags:
# #
The value must be converted to an "alternative form". For conversions or,
the first character of the output string is set to zero (putting a 0 if it was no longer zero).
For x and X conversions, a nonzero result has the string "0x" (or "0X" for X conversions) before it.
For conversions to, A, e, E, f, F, g and G, the result will always contain a decimal point.
For g and Conversions G, the final zeros are not removed from the result as they would be otherwise.
For other conversions, the result is undefined.
.PP
\fBFormat string format\fp
.PP
The formatters allow to be modified to define number of digits or characters,
entering the parameters for the number of digits and significant digits
The arguments must correspond correctly (after type promotion) with the conversion specifier.
By default, the arguments are used in the order given,
where each '*' and each conversion specifier requests the following argument
(and it is a mistake if enough arguments are given).
You can also explicitly specify what argument is taken,
in each place where an argument is required,
by typing "% m $" instead of '%' and "* m $" instead of '*',
where the decimal integer m denotes the position in the argument list of the desired argument,
indexed from 1. Therefore,
.PP
printf ("% * d", width, num);
.PP 
printf ("% 2 $ * 1 $ d", width, num);
.PP
\fBType field characters\fp










OPTIONS
The nuseradd does not take any options. However, you can supply username.
.SH SEE ALSO
useradd(8), passwd(5), nuseradd.debian(8)
.SH BUGS
No known bugs.
.SH AUTHOR
Luz SÃ¡nchez(1178@holbertonschool.com) and Josh Martinez(1175@holbertonschool.com)
